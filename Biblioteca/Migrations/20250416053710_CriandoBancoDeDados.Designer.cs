// <auto-generated />
using Biblioteca.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Biblioteca.Migrations;

[DbContext(typeof(AppDbContext))]
[Migration("20250416053710_CriandoBancoDeDados")]
partial class CriandoBancoDeDados
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.4")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("Biblioteca.Models.AutorModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Sobrenome")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Autores");
            });

        modelBuilder.Entity("Biblioteca.Models.LivroModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("AutorId")
                    .HasColumnType("int");

                b.Property<string>("Titulo")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("AutorId");

                b.ToTable("Livros");
            });

        modelBuilder.Entity("Biblioteca.Models.LivroModel", b =>
            {
                b.HasOne("Biblioteca.Models.AutorModel", "Autor")
                    .WithMany("Livros")
                    .HasForeignKey("AutorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Autor");
            });

        modelBuilder.Entity("Biblioteca.Models.AutorModel", b =>
            {
                b.Navigation("Livros");
            });
#pragma warning restore 612, 618
    }
}
